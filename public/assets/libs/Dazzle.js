class Game{constructor({width:e=500,height:t=500,id:s="game",backgroundColor:i="#fff",cursor:h=!0,fps:n=60,disableContextMenu:c=!0,camera:a={},fullWindow:o=!1,fullScreen:r=!1,activeScene:u="main",scenes:m={main:{}},keyUp:d=e=>{},keyDown:l=e=>{},mouseDown:v=e=>{},mouseUp:g=e=>{},mouseMove:b=e=>{},touchStart:j=e=>{},touchEnd:y=e=>{},touchMove:O=e=>{},custom:p={},load:f=()=>{},render:w=()=>{},update:S=()=>{},onPause:x=()=>{},onUnpause:M=()=>{}}){this.keyUp=d,this.keyDown=l,this.mouseDown=v,this.mouseUp=g,this.mouseMove=b,this.touchStart=j,this.touchEnd=y,this.touchMove=O,this.onPause=x,this.onUnpause=M,this.cv=document.getElementById(s),this.cv||(this.cv=document.createElement("canvas"),this.cv.classList.add(s),this.cv.setAttribute("id","game")),this.ctx=this.cv.getContext("2d"),this.setSize(e,t),!0===(this.fullScreen=r)&&this.setFullscreen(r),this.setBackgroundColor(i),this.setCursor(h),o&&(this.setSize(window.innerWidth,window.innerHeight),window.addEventListener("resize",()=>{this.setSize(window.innerWidth,window.innerHeight)})),this.fps=n,this.camera={x:a.x||this.width/2,y:a.y||this.height/2,zoom:a.zoom||1,target:a.target||null,delay:a.delay||1,shake:{x:0,y:0}},this.pause=!1,document.addEventListener("keydown",e=>this.keyDownListener(e)),document.addEventListener("keyup",e=>this.keyUpListener(e)),document.addEventListener("mousedown",e=>this.mouseDownListener(e)),document.addEventListener("mouseup",e=>this.mouseUpListener(e)),document.addEventListener("mousemove",e=>this.mouseMoveListener(e)),document.addEventListener("touchstart",e=>this.touchStartListener(e)),document.addEventListener("touchmove",e=>this.touchMoveListener(e)),document.addEventListener("touchend",e=>this.touchEndListener(e)),this.getMouse={x:0,y:0},document.addEventListener("mousemove",e=>this.getMousePosition(e)),c&&window.addEventListener("contextmenu",e=>e.preventDefault()),document.body.contains(this.cv)||document.body.appendChild(this.cv),this.scenes={},this.scenesProps={},Object.entries(m).forEach(([e,t])=>{this.scenesProps[e]=t}),this.activeScene=u,Object.entries(p).forEach(([e,t])=>{this[e]=t}),f(this),this.load=f,this.update=S,this.render=w,this.resetScene(),this.updateListener()}setBackgroundColor(e){this.backgroundColor=e,this.cv.style.backgroundColor=e}clear(){this.ctx.clearRect(0,0,this.width,this.height)}updateListener(){this.lastTick=Date.now(),this.deltaTime=0;this.loopInterval=setInterval(()=>{var e=Date.now();this.deltaTime=(e-this.lastTick)/1e3,this.currentFPS=1e3/(e-this.lastTick),this.lastTick=e;try{this.camera.target&&this.cameraTarget(this.getGameObject(this.camera.target),this.camera.delay)}catch(e){console.error("Camera target GameObject undefined")}this.ctx.save(),this.clear(),this.ctx.translate(this.width/2,this.height/2),this.ctx.scale(this.camera.zoom,this.camera.zoom),this.ctx.translate(-(this.camera.x+this.camera.shake.x),-(this.camera.y+this.camera.shake.y)),this.render(this),this.scenes[this.activeScene].renderListener(this.ctx,this.camera),0==this.pause&&0==this.scenes[this.activeScene].pause&&this.scenes[this.activeScene].updateListener(),0==this.pause&&this.update(this),this.ctx.restore()},1e3/this.fps)}setCursor(e){this.cv.style.cursor=e?"default":"none"}shake(e=250,t=2.5,s=1){let i=0;this.shakeInterval=setInterval(()=>{this.camera.shake={x:0+randomFloatFromInterval(-t,t),y:0+randomFloatFromInterval(-t,t)},++i===e&&this.stopShake()},s)}stopShake(){this.shakeInterval&&clearInterval(this.shakeInterval),this.shakeInterval=null,this.camera.shake={x:0,y:0}}setSize(e,t){this.width=e,this.height=t,this.cv.width=e,this.cv.height=t}screenshot(){return this.cv.toDataURL("image/png")}downloadScreenshot(){var e=document.createElement("a");e.href=this.screenshot(),e.download=document.title+" - screenshot.png",document.body.appendChild(e),e.click(),document.body.removeChild(e)}setFPS(e){clearInterval(this.loopInterval),this.fps=e,this.updateListener()}cameraTarget(e,t=1){this.camera.x+=(e.x+e.width/2-this.camera.x)/t,this.camera.y+=(e.y+e.height/2-this.camera.y)/t}cameraZoom(e){this.camera.zoom*=e}resetScene(){const t=new Scene(this.scenesProps[this.activeScene]);((t.game=this).scenes[this.activeScene]=t).load(t),Object.entries(t.gameObjects).forEach(([,e])=>{e.scene=t,e.load(e)}),this.shakeInterval&&this.stopShake()}changeScene(e){this.activeScene=e,this.resetScene()}createGameObject(e,t){t=new GameObject(t);return t.keyName=e,t.scene=this.scenes[this.activeScene],t.load(t),this.scenes[this.activeScene].gameObjects[e]=t,this.scenes[this.activeScene].sortGameObjectsByLayer(),this.scenes[this.activeScene].gameObjects[e]}instantGameObject(e){var t=uuidv4(),e=new GameObject(e);return e.keyName=t,e.scene=this.scenes[this.activeScene],e.load(e),this.scenes[this.activeScene].gameObjects[t]=e,this.scenes[this.activeScene].sortGameObjectsByLayer(),this.scenes[this.activeScene].gameObjects[t]}removeGameObject(e){delete this.scenes[this.activeScene].gameObjects[e]}getGameObject(e){return this.scenes[this.activeScene].gameObjects[e]}getGameObjectByTag(t){let s=[];return Object.entries(this.scenes[this.activeScene].gameObjects).forEach(([e])=>{e=this.scenes[this.activeScene].gameObjects[e];e.tags.includes(t)&&s.push(e)}),s}getGameObjectById(t){return Object.values(this.scenes[this.activeScene].gameObjects).find(e=>e.id===t)}getMousePosition(e){var t=this.cv.getBoundingClientRect();this.getMouse={x:e.clientX-t.left-(-this.camera.x+this.width/2),y:e.clientY-t.top-(-this.camera.y+this.height/2)}}setFullscreen(e=!0){if(!0===e){this.fullScreen=!0;try{this.cv.requestFullscreen?this.cv.requestFullscreen():this.cv.webkitRequestFullscreen?this.cv.webkitRequestFullscreen():this.cv.msRequestFullscreen&&this.cv.msRequestFullscreen()}catch(e){}}else{this.fullScreen=!1;try{document.exitFullscreen()}catch(e){}}}setPause(e){this.pause=e,!0===this.pause?this.onPause(this):this.onUnpause(this)}togglePause(){this.pause=!this.pause,!0===this.pause?this.onPause(this):this.onUnpause(this)}mouseDownListener(e){this.scenes[this.activeScene].mouseDownListener(e),this.mouseDown({event:e,current:this})}mouseUpListener(e){this.scenes[this.activeScene].mouseUpListener(e),this.mouseUp({event:e,current:this})}mouseMoveListener(e){this.scenes[this.activeScene].mouseMoveListener(e),this.mouseMove({event:e,current:this})}keyDownListener(e){this.scenes[this.activeScene].keyDownListener(e),this.keyDown({event:e,current:this})}keyUpListener(e){this.scenes[this.activeScene].keyUpListener(e),this.keyUp({event:e,current:this})}touchStartListener(e){this.scenes[this.activeScene].touchStartListener(e),this.touchStart({event:e,current:this})}touchEndListener(e){this.scenes[this.activeScene].touchEndListener(e),this.touchEnd({event:e,current:this})}touchMoveListener(e){this.scenes[this.activeScene].touchMoveListener(e),this.touchMove({event:e,current:this})}}class Scene{constructor({gameObjects:e={},tileMaps:t=[],keyUp:s=e=>{},keyDown:i=e=>{},mouseDown:h=e=>{},mouseUp:n=e=>{},mouseMove:c=e=>{},touchStart:a=e=>{},touchEnd:o=e=>{},touchMove:r=e=>{},custom:u={},load:m=()=>{},render:d=()=>{},update:l=()=>{}}){this.keyUp=s,this.keyDown=i,this.mouseDown=h,this.mouseUp=n,this.mouseMove=c,this.touchStart=a,this.touchEnd=o,this.touchMove=r,this.gameObjects={},this.pause=!1,t.forEach(e=>{e=new TileMap(e);this.gameObjects={...this.gameObjects,...e.gameObjects}}),Object.entries(e).forEach(([e,t])=>{t=new GameObject(t);t.keyName=e,this.gameObjects[e]=t}),this.sortGameObjectsByLayer(),Object.entries(u).forEach(([e,t])=>{this[e]=t}),this.load=m,this.update=l,this.render=d}sortGameObjectsByLayer(){this.gameObjects=Object.entries(this.gameObjects).sort(([,e],[,t])=>e.z-t.z).reduce((e,[t,s])=>({...e,[t]:s}),{})}updateListener(){Object.entries(this.gameObjects).forEach(([e])=>{const t=this.gameObjects[e];t.active&&(t.update(t),Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];t.id!==e.id&&(isCollide(t,e)&&t.onCollide({current:t,target:e}),positionsMatch(t,e)&&t.onPositionMatch({current:t,target:e}),isInside(t,e))&&t.onInside({current:t,target:e})}))}),this.update(this)}renderListener(){this.render(this),Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.active&&e.visible&&e.render(e)})}keyDownListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.keyDown({event:t,current:e})}),this.keyDown({event:t,current:this})}keyUpListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.keyUp({event:t,current:e})}),this.keyUp({event:t,current:this})}mouseDownListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.mouseDown({event:t,current:e}),isInside(this.game.getMouse,e)&&e.objectMouseDown({event:t,current:e})}),this.mouseDown({event:t,current:this})}mouseUpListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.mouseUp({event:t,current:e}),isInside(this.game.getMouse,e)&&e.objectMouseUp({event:t,current:e})}),this.mouseUp({event:t,current:this})}mouseMoveListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.mouseMove({event:t,current:e}),isInside(this.game.getMouse,e)&&e.objectMouseMove({event:t,current:e})}),this.mouseMove({event:t,current:this})}touchStartListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.touchStart({event:t,current:e})}),this.touchStart({event:t,current:this})}touchEndListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.touchEnd({event:t,current:e})}),this.touchEnd({event:t,current:this})}touchMoveListener(t){Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.touchMove({event:t,current:e})}),this.touchMove({event:t,current:this})}createGameObject(e,t){t=new GameObject(t);return t.keyName=e,t.scene=this,t.load(t),this.gameObjects[e]=t,this.sortGameObjectsByLayer(),this.gameObjects[e]}instantGameObject(e){var t=uuidv4(),e=new GameObject(e);return e.keyName=t,e.scene=this,e.load(e),this.gameObjects[t]=e,this.sortGameObjectsByLayer(),this.gameObjects[t]}removeGameObject(e){delete this.gameObjects[e]}getGameObject(e){return this.gameObjects[e]}getGameObjectByTag(t){let s=[];return Object.entries(this.gameObjects).forEach(([e])=>{e=this.gameObjects[e];e.tags.includes(t)&&s.push(e)}),s}getGameObjectById(t){return Object.values(this.gameObjects).find(e=>e.id===t)}}class GameObject{constructor({id:e=uuidv4(),x:t=0,y:s=0,z:i=0,width:h=10,height:n=10,color:c="#fff",text:a,image:o,active:r=!0,visible:u=!0,tags:m=[],dontDestroyOnLoad:d=!1,UI:l=!1,keyUp:v=e=>{},keyDown:g=e=>{},mouseDown:b=e=>{},mouseUp:j=e=>{},mouseMove:y=e=>{},touchStart:O=e=>{},touchEnd:p=e=>{},touchMove:f=e=>{},objectMouseDown:w=e=>{},objectMouseUp:S=e=>{},objectMouseMove:x=e=>{},objectTouchStart:M=e=>{},objectTouchEnd:k=e=>{},objectTouchMove:L=e=>{},onCollide:E=e=>{},onInside:I=e=>{},onPositionMatch:D=e=>{},custom:U={},load:G=()=>{},update:F=()=>{},render:z}){this.id=e,this.keyUp=v,this.keyDown=g,this.mouseDown=b,this.mouseUp=j,this.mouseMove=y,this.touchStart=O,this.touchEnd=p,this.touchMove=f,this.objectMouseDown=w,this.objectMouseUp=S,this.objectMouseMove=x,this.objectTouchStart=M,this.objectTouchEnd=k,this.objectTouchMove=L,this.onCollide=E,this.onPositionMatch=D,this.onInside=I,this.x=t,this.y=s,this.z=i,this.width=h,this.height=n,this.color=c,this.visible=u,this.active=r,this.tags=m,this.dontDestroyOnLoad=d,this.UI=l,a&&(this.text={value:a.value||"",font:a.font||"Arial",fontSize:a.fontiSize||30,color:a.color||"#fff",offset:a.offset||{x:0,y:0}}),o&&((e=new Image).src=o.src,this.image={element:e,offset:o.offset||{x:0,y:0}}),Object.entries(U).forEach(([e,t])=>{this[e]=t}),this.load=G,this.update=F,z&&(this.render=z)}render(){this.scene.game.ctx.fillStyle=this.color,this.scene.game.ctx.fillRect(this.x,this.y,this.width,this.height),this.text&&(this.scene.game.ctx.fillStyle=this.text.color,this.scene.game.ctx.font=this.text.fontSize+"px "+this.text.font,this.scene.game.ctx.fillText(this.text.value,this.x+this.text.offset.x,this.y+this.text.offset.y)),this.image&&(this.image.pixelated&&(this.scene.game.ctx.imageSmoothingEnabled=!1),this.scene.game.ctx.drawImage(this.image.element,this.x+this.image.offset.x,this.y+this.image.offset.y,this.width,this.height))}}class TileMap{constructor(t){this.x=t.x,this.y=t.y;var s=t.map.replaceAll(" ","").trim().split()[0].replaceAll("\n","");this.map=[],this.gameObjects={};for(let e=0;e<t.rows;e++)this.map[e]=[];let i=0;for(let e=0;e<s.length;e++){var h,n=new GameObject({...t[s[e]],x:t.x+t.size*(this.map[i].length-1),y:t.y+t.size*i,width:t.size,height:t.size});this.map[i].push(s[e]),t[s[e]]&&(h=uuidv4(),n.keyName=h,this.gameObjects[h]=n),this.map[i].length===t.cols&&i++}}render(e,t){}update(e){}reset(){}}function isCollide(e,t){return!(e.y+e.height<t.y||e.y>t.y+t.height||e.x+e.width<t.x||e.x>t.x+t.width)}function isInside(e,t){return e.x>t.x&&e.x<t.x+t.width&&e.y>t.y&&e.y<t.y+t.height}const positionsMatch=(e,t)=>e.x===t.x&&e.y===t.y;function getDistance(e,t){var s=t.x-e.x,t=t.y-e.y;return Math.sqrt(t*t+s*s)}const randomFloatInInterval=e=>Math.random()*(e- -e)+e,randomIntInInterval=e=>Math.floor(Math.random()*(e- -e+1)+e),randomFloatFromInterval=(e,t)=>Math.random()*(t-e)+e,randomIntFromInterval=(e,t)=>Math.floor(Math.random()*(t-e+1)+e),randomItemFromArray=e=>e[Math.floor(Math.random()*e.length)],uuidv4=()=>([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)),getDifference=(e,t)=>Math.abs(e-t);function getSignWithOne(e){return 0===e?0:Math.abs(e)/e}export{Game,Scene,GameObject,TileMap,isCollide,isInside,positionsMatch,getDistance,randomFloatInInterval,randomIntInInterval,randomFloatFromInterval,randomIntFromInterval,randomItemFromArray,uuidv4,getDifference,getSignWithOne};